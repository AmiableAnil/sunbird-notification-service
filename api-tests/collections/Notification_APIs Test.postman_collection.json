{
	"info": {
		"_postman_id": "c4895393-64c0-45cd-a3d8-a43d927459b4",
		"name": "Notification_APIs Test",
		"description": "The Notification Service Collection allows to send different types of notifications such as email, SMS, device and also create in app user feed notifications and read user in app notification feed",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "4875988",
		"_collection_link": "https://dark-star-147860.postman.co/workspace/LernBBAPIs~32e17cc4-6806-407e-b8ef-485ad4d0b712/collection/4875988-c4895393-64c0-45cd-a3d8-a43d927459b4?action=share&source=collection_link&creator=4875988"
	},
	"item": [
		{
			"name": "HealthCheck",
			"item": [
				{
					"name": "HealthCheck",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/health"
					},
					"response": []
				}
			]
		},
		{
			"name": "AuthToken",
			"item": [
				{
					"name": "UserToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();",
									"",
									"// Set global variable",
									"// pm.variables.set('refresh_token', jsonResponse.refresh_token);",
									"// pm.globals.set(\"refresh_token\", jsonResponse.result.identifier);",
									"pm.collectionVariables.set(\"refresh_token\", jsonResponse.refresh_token);",
									"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Cookie",
								"value": "connect.sid=s%3Ad3chYLP8OfuB2bWgfEFohiWpDxM7GFol.gOPmzH3d2nP9enZ5qSHlVx1e%2BozTleCjXtfz7LUycCk"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{auth_client_secret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/auth/realms/sunbird/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "RefreshToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the locationId from the response and set it to the environment variable",
									"pm.test(\"Set access_token in environment variable\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set(\"keycloak_access_token\", responseJson.result.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/auth/v1/refresh/token"
					},
					"response": []
				}
			]
		},
		{
			"name": "NotificationFeedAPIs",
			"item": [
				{
					"name": "UpdateUserNotificationFeed",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"pm.test(\"result.response should be 'SUCCESS'\", function () {",
													"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This ID uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"userId\": \"{{user_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/update"
									},
									"response": [
										{
											"name": "UpdateUserNotificationFeedV1",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "This ID uniquely identifies a request if the same API is executed multiple times."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"userId\": \"{{user_id}}\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/update"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:00:37 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "199"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29999"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "6"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "9"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "62"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.feed.update\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695891637981\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "403 - Missing user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403 (FORBIDDEN)\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This ID uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/update"
									},
									"response": [
										{
											"name": "403 - Missing user id",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "This ID uniquely identifies a request if the same API is executed multiple times."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ]\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/update"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:30:13 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=UTF-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29993"
												},
												{
													"key": "x-request-allowed",
													"value": "no"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "3"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "7"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "You do not have permission to perform this operation"
										}
									]
								},
								{
									"name": "400 - Missing IDs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This ID uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [],\n        \"userId\": \"{{user_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/update"
									},
									"response": [
										{
											"name": "400 - Missing IDs",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "This ID uniquely identifies a request if the same API is executed multiple times."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [],\n        \"userId\": \"{{user_id}}\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/update"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:31:31 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "292"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29991"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "3"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "11"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.feed.update\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:31:31:161+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"0d0e17e373ba69fc40017ed705b48f29\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter ids is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "403 - Invalid user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403 (FORBIDDEN)\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This ID uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"userId\": \"ascd\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/update"
									},
									"response": [
										{
											"name": "403 - Invalid user id",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "This ID uniquely identifies a request if the same API is executed multiple times."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"userId\": \"ascd\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/update"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:32:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=UTF-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29989"
												},
												{
													"key": "x-request-allowed",
													"value": "no"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "3"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "13"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "You do not have permission to perform this operation"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "ReadUserNotificationFeed",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required inputs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"// Check that there is at least one feed item",
													"pm.test(\"At least one feed item is returned\", function () {",
													"    pm.expect(jsonResponse.result.feeds.length).to.be.above(0);",
													"});",
													"",
													"// Check the properties of the first feed item",
													"pm.test(\"Feed item properties are as expected\", function () {",
													"    let firstFeedItem = jsonResponse.result.feeds[0];",
													"    ",
													"    pm.expect(firstFeedItem).to.have.property(\"id\");",
													"    pm.expect(firstFeedItem).to.have.property(\"userId\");",
													"    pm.expect(firstFeedItem).to.have.property(\"status\");",
													"    ",
													"    // Add more property checks as needed",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This ID uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"url": "{{host}}/api/notification/v1/feed/read/{{user_id}}",
										"description": "This API is used for getting in-App notification of the user, userId is uniquely identifies the user\n  - The endpoint for **Get In-App user Feed from userId** is `/notification/v1/read/{userId}`\n  - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty."
									},
									"response": [
										{
											"name": "ReadUserNotificationFeedV1",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "This ID uniquely identifies a request if the same API is executed multiple times."
													}
												],
												"url": "{{host}}/api/notification/v1/feed/read/{{user_id}}"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:02:15 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29999"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "4"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "7"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "127"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.feed.read.6a1aea7a-841f-4d09-8760-c5224d7b07fd\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695891735393\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"feeds\": [\n            {\n                \"expireOn\": null,\n                \"updatedBy\": \"6a1aea7a-841f-4d09-8760-c5224d7b07fd\",\n                \"createdBy\": null,\n                \"action\": null,\n                \"id\": \"fbe926ac-a395-40e4-a65b-9b4f711d7642\",\n                \"updatedOn\": 1695891637978,\n                \"category\": null,\n                \"priority\": null,\n                \"userId\": \"6a1aea7a-841f-4d09-8760-c5224d7b07fd\",\n                \"createdOn\": null,\n                \"version\": null,\n                \"status\": \"read\"\n            }\n        ]\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "403 - Missing user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403 (FORBIDDEN)\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "This ID uniquely identifies a request if the same API is executed multiple times."
											}
										],
										"url": "{{host}}/api/notification/v1/feed/read/abcd",
										"description": "This API is used for getting in-App notification of the user, userId is uniquely identifies the user\n  - The endpoint for **Get In-App user Feed from userId** is `/notification/v1/read/{userId}`\n  - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty."
									},
									"response": [
										{
											"name": "403 - Missing user id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "This ID uniquely identifies a request if the same API is executed multiple times."
													}
												],
												"url": "{{host}}/api/notification/v1/feed/read/abcd"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:35:43 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=UTF-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29994"
												},
												{
													"key": "x-request-allowed",
													"value": "no"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "2"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "59"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "You do not have permission to perform this operation"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "DeleteUserNotificationFeed",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"pm.test(\"result.response should be 'SUCCESS'\", function () {",
													"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"category\": \"abcd\",\n        \"userId\": \"{{user_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/delete"
									},
									"response": [
										{
											"name": "200 - All required fields",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"category\": \"abcd\",\n        \"userId\": \"{{user_id}}\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/delete"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:40:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "297"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29999"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "112"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.feed.delete\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:40:09:987+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"c31607d5a2b5fabddd2c4957edbe7492\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter category is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "403 - Missing user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403 (FORBIDDEN)\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"category\": \"abcd\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/delete"
									},
									"response": [
										{
											"name": "403 - Missing user id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"category\": \"abcd\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/delete"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:41:23 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=UTF-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29998"
												},
												{
													"key": "x-request-allowed",
													"value": "no"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "3"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "28"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "You do not have permission to perform this operation"
										}
									]
								},
								{
									"name": "403 - Invalid user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403 (FORBIDDEN)\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"userId\": \"asc@#\",\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"category\": \"abcd\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/delete"
									},
									"response": [
										{
											"name": "403 - Invalid user id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"userId\": \"asc@#\",\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"category\": \"abcd\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/delete"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:41:49 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=UTF-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29997"
												},
												{
													"key": "x-request-allowed",
													"value": "no"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "3"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "15"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "You do not have permission to perform this operation"
										}
									]
								},
								{
									"name": "400 - Missing category",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"userId\": \"{{user_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/delete"
									},
									"response": [
										{
											"name": "400 - Missing category",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": [\n            \"fbe926ac-a395-40e4-a65b-9b4f711d7642\"\n        ],\n        \"userId\": \"{{user_id}}\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/delete"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:42:52 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "297"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29995"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "9"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.feed.delete\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:42:52:476+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"95d8e3c948eed6b05b509ce723bc1bca\",\n        \"err\": \"MANDATORY_PARAMETER_MISSING\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter category is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "400 - Missing ids",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"ids\": \"\",\n        \"category\": \"abcd\",\n        \"userId\": \"{{user_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/feed/delete"
									},
									"response": [
										{
											"name": "400 - Missing ids",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"ids\": \"\",\n        \"category\": \"abcd\",\n        \"userId\": \"{{user_id}}\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/feed/delete"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:44:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "268"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29992"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "5"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "8"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "6"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.feed.delete\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:44:01:547+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"782db22ebc5b57e8eba412f5d0d8eaf0\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"DATA_TYPE_ERROR\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "NotificationTemplateAPIs",
			"item": [
				{
					"name": "CreateNotificationTemplate",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required inputs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"pm.test(\"result.response should be 'SUCCESS'\", function () {",
													"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/create"
									},
									"response": [
										{
											"name": "200 - All required inputs",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:53:57 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "203"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29987"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "7"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "9"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "16"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.template.create\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695894837252\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
										}
									]
								},
								{
									"name": "200 - Minimum required input",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"pm.test(\"result.response should be 'SUCCESS'\", function () {",
													"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/create"
									},
									"response": [
										{
											"name": "200 - Minimum required input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:54:02 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "203"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29986"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "6"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "8"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "8"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.template.create\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695894842826\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - Missing template id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/create"
									},
									"response": [
										{
											"name": "400 - Missing template id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:51:23 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "298"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29994"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "4"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "61"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.template.create\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:51:23:871+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"d73e8eb9aba80864be9489cc281bfe17\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter templateId is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "400 - Missing data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/create"
									},
									"response": [
										{
											"name": "400 - Missing template id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:52:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "292"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29992"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "5"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "10"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.template.create\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:52:06:998+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"4824f7ca9757a69860996dc936c4c1fc\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter data is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "400 - Missing template schema",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/create"
									},
									"response": [
										{
											"name": "400 - Missing template id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"type\": \"xml\",\n        \"ver\": \"5.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:52:22 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "303"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29991"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "5"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "8"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.template.create\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:52:22:109+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"bb72fda700f229d33deb2b4f62280ddd\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter template_schema is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "400 - Missing type",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"ver\": \"5.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/create"
									},
									"response": [
										{
											"name": "400 - Missing type",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"{{random_code}}\",\n        \"data\": \"{\\\"title\\\":\\\"${param1} is 5.20\\\"}\",\n        \"template_schema\": \"{\\\"$schema\\\":\\\"#/definition/params\\\",\\\"title\\\":\\\"params context\\\",\\\"description\\\":\\\"properties Data\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"param1\\\":{\\\"description\\\":\\\"property 1 value\\\",\\\"type\\\":\\\"string\\\"},\\\"param2\\\":{\\\"description\\\":\\\"property 2 value\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"param1\\\",\\\"param2\\\"]}\",\n        \"ver\": \"5.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:53:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "292"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29989"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "5"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "8"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.template.create\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:53:06:673+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"8289d8f48eecfef64417bcb8fa9aae05\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter type is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "UpdateNotificationTemplate",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"// You can add more specific validations here if needed based on the actual response data.",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\":{\n        \"templateId\":\"1FTIS0\",\n        \"data\":\"{\\\"title\\\": \\\"you have been removed from the ${param2} by ${param1}\\\"}\",\n        \"type\": \"ssml\",\n        \"ver\": \"4.0.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/update"
									},
									"response": [
										{
											"name": "UpdateNotificationTemplateV1",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\":{\n        \"templateId\":\"1FTIS0\",\n        \"data\":\"{\\\"title\\\": \\\"you have been removed from the ${param2} by ${param1}\\\"}\",\n        \"type\": \"ssml\",\n        \"ver\": \"4.0.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/update"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:05:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "183"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29997"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "6"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "9"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "14"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.template.update\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695891904990\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - Missing template id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\":{\n        \"data\":\"{\\\"title\\\": \\\"you have been removed from the ${param2} by ${param1}\\\"}\",\n        \"type\": \"ssml\",\n        \"ver\": \"4.0.0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/update"
									},
									"response": [
										{
											"name": "400 - Missing template id",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\":{\n        \"data\":\"{\\\"title\\\": \\\"you have been removed from the ${param2} by ${param1}\\\"}\",\n        \"type\": \"ssml\",\n        \"ver\": \"4.0.0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/update"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 10:56:20 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "298"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29998"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "5"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "16"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.template.update\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 10:56:20:855+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"5fcd046e410c1718823b47f45bf6fe79\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter templateId is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "NotificationActionAPIs",
					"item": [
						{
							"name": "MapOrUpdateActionNotificationTemplate",
							"item": [
								{
									"name": "Positive",
									"item": [
										{
											"name": "200 - All required inputs",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 200 (OK)\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be 'OK'\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
															"});",
															"",
															"pm.test(\"result should be an object\", function () {",
															"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
															"});",
															"",
															"// Validate the \"response\" property",
															"pm.test(\"response should be 'SUCCESS'\", function () {",
															"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"1FTIS0\",\n        \"action\": \"group-activity-added\",\n        \"type\": \"FEED\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/action/update"
											},
											"response": [
												{
													"name": "MapOrUpdateActionNotificationTemplateV1",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text",
																"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}",
																"type": "text",
																"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text",
																"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"templateId\": \"1FTIS0\",\n        \"action\": \"group-activity-added\",\n        \"type\": \"FEED\"\n    }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/notification/v1/template/action/update"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Thu, 28 Sep 2023 09:17:57 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "210"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29999"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "6"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "9"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "19"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"v1.notification.template.action.update\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695892677084\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Negative",
									"item": [
										{
											"name": "400 - Missing template id",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"result should be an object\", function () {",
															"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"action\": \"group-activity-added\",\n        \"type\": \"FEED\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/action/update"
											},
											"response": [
												{
													"name": "400 - Missing Template Id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text",
																"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}",
																"type": "text",
																"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text",
																"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"action\": \"group-activity-added\",\n        \"type\": \"FEED\"\n    }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/notification/v1/template/action/update"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Thu, 28 Sep 2023 11:04:40 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "305"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29994"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "2"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "5"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "13"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.notification.template.action.update\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:04:40:879+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"963c468958213a19216e749a375584eb\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter templateId is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										},
										{
											"name": "400 - Missing action",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"result should be an object\", function () {",
															"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"1FTIS0\",\n        \"type\": \"FEED\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/action/update"
											},
											"response": [
												{
													"name": "400 - Missing action",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text",
																"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}",
																"type": "text",
																"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text",
																"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"templateId\": \"1FTIS0\",\n        \"type\": \"FEED\"\n    }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{host}}/api/notification/v1/template/action/update"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Thu, 28 Sep 2023 11:05:35 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "301"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29993"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "2"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "5"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "10"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.notification.template.action.update\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:05:35:510+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"dccd5b5dfd54946c2d1cf289d7346fcb\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"Mandatory parameter action is missing\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "GetMappedNotificationTemplateUsingAction",
							"item": [
								{
									"name": "Positive",
									"item": [
										{
											"name": "200 - All required inputs",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 200 (OK)\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be 'OK'\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
															"});",
															"",
															"pm.test(\"result should be an object\", function () {",
															"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
															"});",
															"",
															"// Validate the \"template\" property",
															"pm.test(\"template should be an object\", function () {",
															"    pm.expect(jsonResponse.result.template).to.be.an(\"object\");",
															"});",
															"",
															"pm.test(\"templateId should be '1FTIS0'\", function () {",
															"    pm.expect(jsonResponse.result.template.templateId).to.eql(\"1FTIS0\");",
															"});",
															"",
															"// Validate the \"action\" property",
															"pm.test(\"action should be 'group-activity-added'\", function () {",
															"    pm.expect(jsonResponse.result.action).to.eql(\"group-activity-added\");",
															"});",
															"",
															"// Validate the \"type\" property",
															"pm.test(\"type should be 'FEED'\", function () {",
															"    pm.expect(jsonResponse.result.type).to.eql(\"FEED\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"url": "{{host}}/api/notification/v1/template/group-activity-added",
												"description": "This API is used for getting  available action mapped to templates in the notification service"
											},
											"response": [
												{
													"name": "200 - All required inputs",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text",
																"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}",
																"type": "text",
																"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text",
																"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
															}
														],
														"url": "{{host}}/api/notification/v1/template/group-activity-added"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Thu, 28 Sep 2023 09:22:29 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Vary",
															"value": "Accept-Encoding"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29995"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "4"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "7"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "0"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														},
														{
															"key": "Content-Encoding",
															"value": "gzip"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"v1.notification.template.group-activity-added\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695892949639\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"template\": {\n            \"lastUpdatedBy\": \"6a1aea7a-841f-4d09-8760-c5224d7b07fd\",\n            \"ver\": \"4.0.0\",\n            \"data\": \"{\\\"title\\\": \\\"you have been removed from the ${param2} by ${param1}\\\"}\",\n            \"createdBy\": null,\n            \"lastUpdatedOn\": 1695892937770,\n            \"templateId\": \"1FTIS0\",\n            \"type\": \"ssml\",\n            \"config\": {},\n            \"createdOn\": null,\n            \"template_schema\": null\n        },\n        \"action\": \"group-activity-added\",\n        \"type\": \"FEED\"\n    }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Negative",
									"item": [
										{
											"name": "400 - Invalid action",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Parse the response JSON body",
															"let jsonResponse = pm.response.json();",
															"",
															"// Verification",
															"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Content-Type header is present\", () => {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"Content-Type header is application/json\", () => {",
															"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
															"});",
															"",
															"// Validation",
															"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
															"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
															"});",
															"",
															"pm.test(\"result should be an object\", function () {",
															"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"url": "{{host}}/api/notification/v1/template/group-activity-adde",
												"description": "This API is used for getting  available action mapped to templates in the notification service"
											},
											"response": [
												{
													"name": "400 - Invalid action",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text",
																"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
															},
															{
																"key": "X-authenticated-user-token",
																"value": "{{keycloak_access_token}}",
																"type": "text",
																"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
															},
															{
																"key": "Authorization",
																"value": "{{kong_api_key}}",
																"type": "text",
																"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
															}
														],
														"url": "{{host}}/api/notification/v1/template/group-activity-adde"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Thu, 28 Sep 2023 11:07:23 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Content-Length",
															"value": "305"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "X-RateLimit-Limit-hour",
															"value": "30000"
														},
														{
															"key": "X-RateLimit-Remaining-hour",
															"value": "29998"
														},
														{
															"key": "referrer-policy",
															"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
														},
														{
															"key": "x-frame-options",
															"value": "DENY"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "access-control-allow-origin",
															"value": "*"
														},
														{
															"key": "x-permitted-cross-domain-policies",
															"value": "master-only"
														},
														{
															"key": "x-envoy-upstream-service-time",
															"value": "3"
														},
														{
															"key": "X-Kong-Upstream-Latency",
															"value": "6"
														},
														{
															"key": "X-Kong-Proxy-Latency",
															"value": "11"
														},
														{
															"key": "Via",
															"value": "kong/0.14.1"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"api.notification.template\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:07:23:088+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"2f9d4d639f8fcc8130159a6c317f7227\",\n        \"err\": \"TEMPLATE_NOT_FOUND\",\n        \"status\": null,\n        \"errmsg\": \"Template is not pre configured for group-activity-adde type\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "NotificationSendAPIs",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required Inputs Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"pm.test(\"result should be an object\", function () {",
													"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
													"});",
													"",
													"// Validate the \"response\" property",
													"pm.test(\"response should be 'SUCCESS'\", function () {",
													"    pm.expect(jsonResponse.result.response).to.eql(\"SUCCESS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "(Required) "
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"priority\": 1,\n                \"type\": \"feed\",\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v2/send",
										"description": "- This API allows to send email,sms,device and feed type notifications. This will only be accessible internally by different service to send notification. Template configuration needs to be configured to use this service."
									},
									"response": [
										{
											"name": "SendNotificationV2",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "(Required) "
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"priority\": 1,\n                \"type\": \"feed\",\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v2/send"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:24:22 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "192"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29998"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "16"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "18"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "9"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v2.notification.send\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695893062311\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"response\": \"SUCCESS\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - Missing action",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "(Required) "
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"priority\": 1,\n                \"type\": \"feed\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v2/send",
										"description": "- This API allows to send email,sms,device and feed type notifications. This will only be accessible internally by different service to send notification. Template configuration needs to be configured to use this service."
									},
									"response": [
										{
											"name": "400 - Missing action",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "(Required) "
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"priority\": 1,\n                \"type\": \"feed\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v2/send"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 11:26:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "292"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29994"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "4"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "11"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"notification.send\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:26:04:295+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"99797b1b292a126b25ad2cd1c867e8eb\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"#/notifications/0: required key [action] not found\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "400 - Missing type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "(Required) "
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"priority\": 1,\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v2/send",
										"description": "- This API allows to send email,sms,device and feed type notifications. This will only be accessible internally by different service to send notification. Template configuration needs to be configured to use this service."
									},
									"response": [
										{
											"name": "400 - Missing type",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "(Required) "
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"priority\": 1,\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v2/send"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 11:26:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29993"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "4"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "10"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"notification.send\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:26:48:679+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"fa2738a5930189183b4d3b94aefcb172\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"#/notifications/0: required key [type] not found\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "400 - Missing priority",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "(Required) "
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"type\": \"feed\",\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v2/send",
										"description": "- This API allows to send email,sms,device and feed type notifications. This will only be accessible internally by different service to send notification. Template configuration needs to be configured to use this service."
									},
									"response": [
										{
											"name": "400 - Missing priority",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "(Required) "
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"ids\": [\n                    \"c977cd14-8cdf-4f17-b4bd-418736e97861\"\n                ],\n                \"type\": \"feed\",\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v2/send"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 11:27:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "294"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29992"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "4"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "14"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"notification.send\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:27:32:856+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"b05bc44c0cc62758fe4b84f1903b9a00\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"#/notifications/0: required key [priority] not found\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								},
								{
									"name": "500 - Missing ids",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 500\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'unAuthorized'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"unAuthorized\");",
													"});",
													"",
													"pm.test(\"result should be an object\", function () {",
													"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "(Required) "
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "(Required) "
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"priority\": 1,\n                \"type\": \"feed\",\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v2/send",
										"description": "- This API allows to send email,sms,device and feed type notifications. This will only be accessible internally by different service to send notification. Template configuration needs to be configured to use this service."
									},
									"response": [
										{
											"name": "500 - Missing ids",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "(Required) "
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "(Required) "
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"notifications\": [\n            {\n                \"priority\": 1,\n                \"type\": \"feed\",\n                \"action\": {\n                    \"type\": \"group-activity-added\",\n                    \"category\": \"groups\",\n                    \"template\": {\n                        \"type\": \"JSON\",\n                        \"params\": {\n                            \"param1\": \"Test\",\n                            \"param2\": \"John\",\n                            \"param3\": \"123231\"\n                        }\n                    },\n                    \"createdBy\": {\n                        \"id\": \"f10d5216-6b96-404c-8d1c-cc1f720d910d\",\n                        \"name\": \"John\",\n                        \"type\": \"User\"\n                    },\n                    \"additionalInfo\": {\n                        \"group\": {\n                            \"id\": \"123434\",\n                            \"name\": \"Test\"\n                        },\n                        \"groupRole\": \"admin\",\n                        \"activity\": {\n                            \"id\": \"do_12443\",\n                            \"type\": \"Course\",\n                            \"name\": \"Maths Activity\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v2/send"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 11:15:40 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "248"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29996"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "5"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "8"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "9"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"notification.send\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 11:15:40:809+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"b5de08aa305c8d189aed1b21a7b91f3b\",\n        \"err\": \"INTERNAL_ERROR\",\n        \"status\": null,\n        \"errmsg\": \"INTERNAL_ERROR\"\n    },\n    \"responseCode\": \"unAuthorized\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "DeleteNotificationTemplate",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required inputs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"1FTIS0\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/delete"
									},
									"response": [
										{
											"name": "200 - All required inputs",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"templateId\": \"1FTIS0\"\n    }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/delete"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:07:30 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "183"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29997"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "4"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "7"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "14"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.template.delete\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695892050168\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "400 - Missing template id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 400 (BAD_REQUEST)\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'CLIENT_ERROR'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"CLIENT_ERROR\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request\": {\n        \"templateId\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{host}}/api/notification/v1/template/delete"
									},
									"response": [
										{
											"name": "400 - Missing template id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{host}}/api/notification/v1/template/delete"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:48:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "279"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29991"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "2"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "5"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "7"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"api.notification.template.delete\",\n    \"ver\": null,\n    \"ts\": \"2023-09-28 09:48:24:415+0000\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": \"a1a36c70476d7178b107f508cb18eb84\",\n        \"err\": \"INVALID_REQUESTED_DATA\",\n        \"status\": null,\n        \"errmsg\": \"INVALID_REQUESTED_DATA\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {}\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "ListNotificationTemplate",
					"item": [
						{
							"name": "Positive",
							"item": [
								{
									"name": "200 - All required inputs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response JSON body",
													"let jsonResponse = pm.response.json();",
													"",
													"// Verification",
													"pm.test(\"Status code is 200 (OK)\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content-Type header is present\", () => {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"Content-Type header is application/json\", () => {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
													"});",
													"",
													"// Validation",
													"pm.test(\"responseCode should be 'OK'\", function () {",
													"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
													"});",
													"",
													"// Validate the structure of the \"result\" object",
													"pm.test(\"result should be an object\", function () {",
													"    pm.expect(jsonResponse.result).to.be.an(\"object\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
											},
											{
												"key": "X-authenticated-user-token",
												"value": "{{keycloak_access_token}}",
												"type": "text",
												"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
											},
											{
												"key": "Authorization",
												"value": "{{kong_api_key}}",
												"type": "text",
												"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
											}
										],
										"url": "{{host}}/api/notification/v1/template/list",
										"description": "This API is used for getting all available templates in the notification service"
									},
									"response": [
										{
											"name": "200 - All required inputs",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"description": "(Required) It is a unique token/key to authenticate the user each time an API is called. For corresponding sessions this token is used, not your actual username/password"
													},
													{
														"key": "X-authenticated-user-token",
														"value": "{{keycloak_access_token}}",
														"type": "text",
														"description": "Managed User token of registered MUA user performing given API request. From this LUA and MUA id are seperated and LUA is validated against user_id in x-authenticated-user-token"
													},
													{
														"key": "Authorization",
														"value": "{{kong_api_key}}",
														"type": "text",
														"description": "Timestamp is a sequence of characters or encoded information identifying when the list notification API call occurred, usually it gives date and time of day, mostly accurate to a small fraction of a second."
													}
												],
												"url": "{{host}}/api/notification/v1/template/list"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 28 Sep 2023 09:10:57 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "194"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-RateLimit-Limit-hour",
													"value": "30000"
												},
												{
													"key": "X-RateLimit-Remaining-hour",
													"value": "29998"
												},
												{
													"key": "referrer-policy",
													"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "master-only"
												},
												{
													"key": "x-envoy-upstream-service-time",
													"value": "3"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "6"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "12"
												},
												{
													"key": "Via",
													"value": "kong/0.14.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"v1.notification.template.list\",\n    \"ver\": \"v1\",\n    \"ts\": \"1695892257890\",\n    \"params\": {\n        \"resmsgid\": null,\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": null,\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"template\": []\n    }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "refresh_token",
			"value": ""
		}
	]
}